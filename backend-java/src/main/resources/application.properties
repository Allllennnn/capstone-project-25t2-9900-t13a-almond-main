# application-docker.properties

# Name of the Spring Boot application
spring.application.name=backend-java
# Bind the server to all network interfaces
server.address=0.0.0.0
# Port for the embedded server to listen on
server.port=8080

# Activate the "docker" profile for environment-specific configuration
spring.profiles.active=docker

# JDBC URL for MySQL database (hosted on RDS)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate DDL auto setting: validate the schema by default
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}

# Flyway database migration settings
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
spring.flyway.repair-on-migrate=true
spring.flyway.clean-on-validation-error=false

# MyBatis: map snake_case columns to camelCase properties and log SQL to stdout
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# Show SQL statements in the console (JPA)
spring.jpa.show-sql=true

# Multipart file upload limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

# Alibaba Cloud OSS configuration
aliyun.oss.endpoint=${ALIYUN_OSS_ENDPOINT}
aliyun.oss.accessKeyId=${ALIYUN_OSS_ACCESS_KEY_ID}
aliyun.oss.accessKeySecret=${ALIYUN_OSS_ACCESS_KEY_SECRET}
aliyun.oss.bucketName=${ALIYUN_OSS_BUCKET_NAME}
# URL of the Python backend service for AI/Agent integration
python.backend.url=http://backend-python:8000

# Secret key used to sign JWT tokens
jwt.signKey=almond
